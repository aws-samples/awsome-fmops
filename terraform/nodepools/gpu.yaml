---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: gpu
  annotations:
    kubernetes.io/description: "General purpose NodePool for GPU generic workloads"
spec:
  template:
    spec:
      requirements:
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["g", "p"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-gpu-manufacturer
          operator: In
          values: ["nvidia"] # to avoid getting AMD GPUs
      nodeClassRef:
        name: "default"
      taints:
        - key: nvidia.com/gpu
          value: "true"
          effect: "NoSchedule"
      #nodeClassRef:
      #  apiVersion: karpenter.k8s.aws/v1beta1
      #  kind: EC2NodeClass
      #  name: gpu
#---
#apiVersion: karpenter.k8s.aws/v1beta1
#kind: EC2NodeClass
#metadata:
#  name: bottlerocket
#  annotations:
#    kubernetes.io/description: "EC2NodeClass for running Bottlerocket nodes"
#spec:
#  amiFamily: Bottlerocket
#  role: "KarpenterNodeRole-${CLUSTER_NAME}" # replace with your cluster name
#  subnetSelectorTerms:
#    - tags:
#        karpenter.sh/discovery: "${CLUSTER_NAME}" # replace with your cluster name
#  securityGroupSelectorTerms:
#    - tags:
#        karpenter.sh/discovery: "${CLUSTER_NAME}" # replace with your cluster name
#  blockDeviceMappings:
#    - deviceName: /dev/xvda
#      ebs:
#        volumeType: gp3
#        volumeSize: 4Gi
#        deleteOnTermination: true
#    # Bottlerocket data volume
#    - deviceName: /dev/xvdb
#      ebs:
#        volumeType: gp3
#        volumeSize: 128Gi # replace with your required disk size
#        deleteOnTermination: true
#
