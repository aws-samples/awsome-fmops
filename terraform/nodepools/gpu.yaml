---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: gpu
  annotations:
    kubernetes.io/description: "General purpose NodePool for GPU generic workloads"
spec:
  template:
    spec:
      requirements:
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["g", "p"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-gpu-manufacturer
          operator: In
          values: ["nvidia"] # to avoid getting AMD GPUs
      taints:
        - key: nvidia.com/gpu
          value: "true"
          effect: "NoSchedule"
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: gpu
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: al2-gpu
  annotations:
    kubernetes.io/description: "EC2NodeClass for running GPU nodes"
spec:
  amiFamily: AL2
  role: "KarpenterNodeRole-karpenter-blueprints" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "karpenter-blueprints" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "karpenter-blueprints" # replace with your cluster name
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeType: gp3
        volumeSize: 128Gi
        deleteOnTermination: true